{"ast":null,"code":"/*!\n * web3.js - Ethereum JavaScript API\n *\n * @license lgpl-3.0\n * @see https://github.com/ethereum/web3.js\n*/\n\n/*\n * This file is part of web3.js.\n * \n * web3.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * web3.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @file web3.js\n * @authors:\n *   Jeffrey Wilcke <jeff@ethdev.com>\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n *   Gav Wood <g@ethdev.com>\n * @date 2014\n */\n\nvar RequestManager = require('./web3/requestmanager');\nvar Iban = require('./web3/iban');\nvar Eth = require('./web3/methods/eth');\nvar DB = require('./web3/methods/db');\nvar Shh = require('./web3/methods/shh');\nvar Net = require('./web3/methods/net');\nvar Personal = require('./web3/methods/personal');\nvar Swarm = require('./web3/methods/swarm');\nvar Settings = require('./web3/settings');\nvar version = require('./version.json');\nvar utils = require('./utils/utils');\nvar sha3 = require('./utils/sha3');\nvar extend = require('./web3/extend');\nvar Batch = require('./web3/batch');\nvar Property = require('./web3/property');\nvar HttpProvider = require('./web3/httpprovider');\nvar IpcProvider = require('./web3/ipcprovider');\nvar BigNumber = require('bignumber.js');\nfunction Web3(provider) {\n  this._requestManager = new RequestManager(provider);\n  this.currentProvider = provider;\n  this.eth = new Eth(this);\n  this.db = new DB(this);\n  this.shh = new Shh(this);\n  this.net = new Net(this);\n  this.personal = new Personal(this);\n  this.bzz = new Swarm(this);\n  this.settings = new Settings();\n  this.version = {\n    api: version.version\n  };\n  this.providers = {\n    HttpProvider: HttpProvider,\n    IpcProvider: IpcProvider\n  };\n  this._extend = extend(this);\n  this._extend({\n    properties: properties()\n  });\n}\n\n// expose providers on the class\nWeb3.providers = {\n  HttpProvider: HttpProvider,\n  IpcProvider: IpcProvider\n};\nWeb3.prototype.setProvider = function (provider) {\n  this._requestManager.setProvider(provider);\n  this.currentProvider = provider;\n};\nWeb3.prototype.reset = function (keepIsSyncing) {\n  this._requestManager.reset(keepIsSyncing);\n  this.settings = new Settings();\n};\nWeb3.prototype.BigNumber = BigNumber;\nWeb3.prototype.toHex = utils.toHex;\nWeb3.prototype.toAscii = utils.toAscii;\nWeb3.prototype.toUtf8 = utils.toUtf8;\nWeb3.prototype.fromAscii = utils.fromAscii;\nWeb3.prototype.fromUtf8 = utils.fromUtf8;\nWeb3.prototype.toDecimal = utils.toDecimal;\nWeb3.prototype.fromDecimal = utils.fromDecimal;\nWeb3.prototype.toBigNumber = utils.toBigNumber;\nWeb3.prototype.toWei = utils.toWei;\nWeb3.prototype.fromWei = utils.fromWei;\nWeb3.prototype.isAddress = utils.isAddress;\nWeb3.prototype.isChecksumAddress = utils.isChecksumAddress;\nWeb3.prototype.toChecksumAddress = utils.toChecksumAddress;\nWeb3.prototype.isIBAN = utils.isIBAN;\nWeb3.prototype.padLeft = utils.padLeft;\nWeb3.prototype.padRight = utils.padRight;\nWeb3.prototype.sha3 = function (string, options) {\n  return '0x' + sha3(string, options);\n};\n\n/**\n * Transforms direct icap to address\n */\nWeb3.prototype.fromICAP = function (icap) {\n  var iban = new Iban(icap);\n  return iban.address();\n};\nvar properties = function properties() {\n  return [new Property({\n    name: 'version.node',\n    getter: 'web3_clientVersion'\n  }), new Property({\n    name: 'version.network',\n    getter: 'net_version',\n    inputFormatter: utils.toDecimal\n  }), new Property({\n    name: 'version.ethereum',\n    getter: 'eth_protocolVersion',\n    inputFormatter: utils.toDecimal\n  }), new Property({\n    name: 'version.whisper',\n    getter: 'shh_version',\n    inputFormatter: utils.toDecimal\n  })];\n};\nWeb3.prototype.isConnected = function () {\n  return this.currentProvider && this.currentProvider.isConnected();\n};\nWeb3.prototype.createBatch = function () {\n  return new Batch(this);\n};\nmodule.exports = Web3;","map":{"version":3,"names":["RequestManager","require","Iban","Eth","DB","Shh","Net","Personal","Swarm","Settings","version","utils","sha3","extend","Batch","Property","HttpProvider","IpcProvider","BigNumber","Web3","provider","_requestManager","currentProvider","eth","db","shh","net","personal","bzz","settings","api","providers","_extend","properties","prototype","setProvider","reset","keepIsSyncing","toHex","toAscii","toUtf8","fromAscii","fromUtf8","toDecimal","fromDecimal","toBigNumber","toWei","fromWei","isAddress","isChecksumAddress","toChecksumAddress","isIBAN","padLeft","padRight","string","options","fromICAP","icap","iban","address","name","getter","inputFormatter","isConnected","createBatch","module","exports"],"sources":["D:/cx/node_modules/web3/lib/web3.js"],"sourcesContent":["/*!\n * web3.js - Ethereum JavaScript API\n *\n * @license lgpl-3.0\n * @see https://github.com/ethereum/web3.js\n*/\n\n/*\n * This file is part of web3.js.\n * \n * web3.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * web3.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @file web3.js\n * @authors:\n *   Jeffrey Wilcke <jeff@ethdev.com>\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n *   Gav Wood <g@ethdev.com>\n * @date 2014\n */\n\nvar RequestManager = require('./web3/requestmanager');\nvar Iban = require('./web3/iban');\nvar Eth = require('./web3/methods/eth');\nvar DB = require('./web3/methods/db');\nvar Shh = require('./web3/methods/shh');\nvar Net = require('./web3/methods/net');\nvar Personal = require('./web3/methods/personal');\nvar Swarm = require('./web3/methods/swarm');\nvar Settings = require('./web3/settings');\nvar version = require('./version.json');\nvar utils = require('./utils/utils');\nvar sha3 = require('./utils/sha3');\nvar extend = require('./web3/extend');\nvar Batch = require('./web3/batch');\nvar Property = require('./web3/property');\nvar HttpProvider = require('./web3/httpprovider');\nvar IpcProvider = require('./web3/ipcprovider');\nvar BigNumber = require('bignumber.js');\n\n\n\nfunction Web3 (provider) {\n    this._requestManager = new RequestManager(provider);\n    this.currentProvider = provider;\n    this.eth = new Eth(this);\n    this.db = new DB(this);\n    this.shh = new Shh(this);\n    this.net = new Net(this);\n    this.personal = new Personal(this);\n    this.bzz = new Swarm(this);\n    this.settings = new Settings();\n    this.version = {\n        api: version.version\n    };\n    this.providers = {\n        HttpProvider: HttpProvider,\n        IpcProvider: IpcProvider\n    };\n    this._extend = extend(this);\n    this._extend({\n        properties: properties()\n    });\n}\n\n// expose providers on the class\nWeb3.providers = {\n    HttpProvider: HttpProvider,\n    IpcProvider: IpcProvider\n};\n\nWeb3.prototype.setProvider = function (provider) {\n    this._requestManager.setProvider(provider);\n    this.currentProvider = provider;\n};\n\nWeb3.prototype.reset = function (keepIsSyncing) {\n    this._requestManager.reset(keepIsSyncing);\n    this.settings = new Settings();\n};\n\nWeb3.prototype.BigNumber = BigNumber;\nWeb3.prototype.toHex = utils.toHex;\nWeb3.prototype.toAscii = utils.toAscii;\nWeb3.prototype.toUtf8 = utils.toUtf8;\nWeb3.prototype.fromAscii = utils.fromAscii;\nWeb3.prototype.fromUtf8 = utils.fromUtf8;\nWeb3.prototype.toDecimal = utils.toDecimal;\nWeb3.prototype.fromDecimal = utils.fromDecimal;\nWeb3.prototype.toBigNumber = utils.toBigNumber;\nWeb3.prototype.toWei = utils.toWei;\nWeb3.prototype.fromWei = utils.fromWei;\nWeb3.prototype.isAddress = utils.isAddress;\nWeb3.prototype.isChecksumAddress = utils.isChecksumAddress;\nWeb3.prototype.toChecksumAddress = utils.toChecksumAddress;\nWeb3.prototype.isIBAN = utils.isIBAN;\nWeb3.prototype.padLeft = utils.padLeft;\nWeb3.prototype.padRight = utils.padRight;\n\n\nWeb3.prototype.sha3 = function(string, options) {\n    return '0x' + sha3(string, options);\n};\n\n/**\n * Transforms direct icap to address\n */\nWeb3.prototype.fromICAP = function (icap) {\n    var iban = new Iban(icap);\n    return iban.address();\n};\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'version.node',\n            getter: 'web3_clientVersion'\n        }),\n        new Property({\n            name: 'version.network',\n            getter: 'net_version',\n            inputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'version.ethereum',\n            getter: 'eth_protocolVersion',\n            inputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'version.whisper',\n            getter: 'shh_version',\n            inputFormatter: utils.toDecimal\n        })\n    ];\n};\n\nWeb3.prototype.isConnected = function(){\n    return (this.currentProvider && this.currentProvider.isConnected());\n};\n\nWeb3.prototype.createBatch = function () {\n    return new Batch(this);\n};\n\nmodule.exports = Web3;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}